version: "3.9"
name: "In-Book"

services:
    db_inbook:
        image: inbookreg.azurecr.io/db
        build: ./backend/database/
        platform: "linux/amd64"
        restart: always
        container_name: db_inbook
        ports:
            - "3306:3306"
        networks:
            - PHPNetwork
            - DBNetwork

    backend:
        image: inbookreg.azurecr.io/backend
        build: ./backend/config/
        platform: "linux/amd64"
        restart: always
        container_name: backend
        depends_on:
            - db_inbook
        environment:
            NODE_ENV: production
            NODE_TLS_REJECT_UNAUTHORIZED: 0 
        expose:
            - "4000"
        networks:
            - DBNetwork
        volumes:
            - ${WEBAPP_STORAGE_HOME}/backend/:/backend/
            - ${WEBAPP_STORAGE_HOME}/frontend_nuovo/:/frontend_nuovo/
            - ${WEBAPP_STORAGE_HOME}/package.json:/package.json
            - ${WEBAPP_STORAGE_HOME}/package-lock.json:/package-lock.json
            - ${WEBAPP_STORAGE_HOME}/keycloak.json:/keycloak.json

    keycloak:
        image: inbookreg.azurecr.io/keycloak
        build: ./keycloak/
        platform: "linux/amd64"
        restart: always
        container_name: keycloak
        depends_on:
            - db_inbook
        expose:
            - "8080"
            - "8443"
        networks:
            - DBNetwork

    nginx:
        image: inbookreg.azurecr.io/nginx
        hostname: inbook.azurewebsites.net
        platform: "linux/amd64"
        restart: always
        container_name: nginx
        build: ./nginx/
        depends_on:
          - db_inbook
          - backend
        ports:
            - "433:433"
        volumes:
            - ${WEBAPP_STORAGE_HOME}/nginx/conf:/etc/nginx
            - ${WEBAPP_STORAGE_HOME}/nginx/ssl:/etc/nginx/ssl
        networks:
          - DBNetwork

networks:
    DBNetwork:
        driver: bridge
    PHPNetwork:
        driver: bridge
