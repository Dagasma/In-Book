version: "3.9"
name: "In-Book"

services:
    db_inbook:
        image: inbookreg.azurecr.io/db
        build: ./backend/database/
        platform: "linux/amd64"
        restart: always
        container_name: db_inbook
        expose:
            - "3306"
        networks:
            - DBNetwork

    phpmyadmin:
        image: inbookreg.azurecr.io/phpmyadmin
        build: ./backend/phpmyadmin/
        platform: "linux/amd64"
        restart: always
        container_name: phpmyadmin
        depends_on:
            - db_inbook
        expose:
            - "9000"
        networks:
            - DBNetwork

    backend:
        image: inbookreg.azurecr.io/backend
        build: ./backend/config/
        platform: "linux/amd64"
        restart: always
        container_name: backend
        depends_on:
            - db_inbook
        environment:
            - NODE_ENV=production
        expose:
            - "4000"
        networks:
            - DBNetwork
        volumes:
            - ${WEBAPP_STORAGE_HOME}/backend/:/server/backend/
            - ${WEBAPP_STORAGE_HOME}/frontend/:/server/frontend/
            - ${WEBAPP_STORAGE_HOME}/package.json:/server/package.json
            - ${WEBAPP_STORAGE_HOME}/package-lock.json:/server/package-lock.json
            - ${WEBAPP_STORAGE_HOME}/keycloak.json:/server/keycloak.json
            - ${WEBAPP_STORAGE_HOME}/.env:/server/.env

    keycloak:
        image: inbookreg.azurecr.io/keycloak
        build: ./keycloak/
        platform: "linux/amd64"
        restart: always
        container_name: keycloak
        depends_on:
            - db_inbook
        expose:
            - "8080"
            - "8443"
        networks:
            - DBNetwork

    nginx:
        image: inbookreg.azurecr.io/nginx
        hostname: inbook.azurewebsites.net
        platform: "linux/amd64"
        restart: always
        container_name: nginx
        build: ./nginx/
        depends_on:
          - db_inbook
          - backend
        ports:
            - "80:80"
        volumes:
            - ${WEBAPP_STORAGE_HOME}/nginx/conf:/etc/nginx
            - ${WEBAPP_STORAGE_HOME}/nginx/ssl:/etc/nginx/ssl
        networks:
          - DBNetwork

    vault:
        image: inbookreg.azurecr.io/vault
        build: ./hashicorp_vault/
        platform: "linux/amd64"
        container_name: vault
        hostname: vault
        cap_add:
            - IPC_LOCK
        volumes:
            - ${WEBAPP_STORAGE_HOME}/hashicorp_vault/vault/data:/vault/data
            - ${WEBAPP_STORAGE_HOME}/.env:/vault/.env
        expose:
            - "8200"
        networks:
            - DBNetwork

networks:
    DBNetwork:
        driver: bridge